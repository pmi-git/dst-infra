#!/bin/bash
cd "$(dirname "$0")/.."

# V√©rifie si l'instance existe dans l'√©tat Terraform
INSTANCE_ID=$(terraform show -json 2>/dev/null | jq -r '
  .values.root_module.resources[]?
  | select(.type == "aws_instance")
  | .values.id
')

if [ -z "$INSTANCE_ID" ] || [ "$INSTANCE_ID" == "null" ]; then
  echo "‚ùå Aucune instance EC2 actuellement g√©r√©e par Terraform."
  exit 0
fi

# R√©cup√®re la r√©gion
REGION=$(terraform output -raw aws_region 2>/dev/null || echo "us-east-2")

# V√©rifie l'√©tat de l'instance via AWS CLI
STATE=$(aws ec2 describe-instances \
  --instance-ids "$INSTANCE_ID" \
  --region "$REGION" \
  --query "Reservations[0].Instances[0].State.Name" \
  --output text 2>/dev/null)

if [ "$STATE" == "terminated" ] || [ "$STATE" == "null" ]; then
  echo "‚ö†Ô∏è L'instance $INSTANCE_ID a √©t√© supprim√©e ou n'existe plus."
  exit 0
fi

echo "üñ•Ô∏è  Instance ID: $INSTANCE_ID"
echo "üìç √âtat actuel : $STATE"

# Si l'instance est active, affiche l'adresse IP publique
if [ "$STATE" == "running" ]; then
  PUBLIC_IP=$(aws ec2 describe-instances \
    --instance-ids "$INSTANCE_ID" \
    --region "$REGION" \
    --query "Reservations[0].Instances[0].PublicIpAddress" \
    --output text)

  echo "üåê IP Publique : $PUBLIC_IP"
fi
